{
"AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Demonstrating ELB With Instances",
    "Metadata": {
    },
    
    "Parameters": {
        "ELBSecGroups" : {
            "Description" : "Security group for the load balancer",
            "Type" : "AWS::EC2::SecurityGroup::Id",
            "Default" : "sg-xxxxxxxx"
          },
          "ELBSubnets" : {
            "Description" : "Choose from the subnets from your Load Balancer",
            "Type" : "List<AWS::EC2::Subnet::Id>"            
          },
          "LoadBalancerPort" : {
            "Description" : "LoadBalancer external port.",
            "Default" : "80",
            "Type" : "Number"
          },
          "InstancePort" : {
            "Description" : "The TCP port on which the instance server is listening.",
            "Default" : "80",
            "Type" : "Number"
          },
          "Protocol" : {
            "Description" : "Choose your protocols",
            "Type" : "String",
            "Default" : "HTTP",
            "AllowedValues" : [ "HTTP", "HTTPS", "TCP", "SSL" ],
            "ConstraintDescription" : "Must be HTTP, HTTPS, TCP, or SSL. "
          },
          "HealthCheckTarget" : {
            "Description" : "Specifies the instance's protocol and port to check. The protocol can be TCP, HTTP, HTTPS, or SSL. The range of valid ports is 1 through 65535. For TCP and SSL, you specify a port pair. For example, you can specify TCP:5000 or SSL:5000. For HTTP or HTTPS, you specify a port and a path to ping (HTTP or HTTPS:port/PathToPing). For example, you can specify HTTP:80/health .",
            "Default" : "TCP:80",
            "Type" : "String"
          },
          "ELBHealthCheckHealthyThreshold" : {
            "Description" : "The number of consecutive health probe successes required before moving the instance to the Healthy state.",
            "Default" : "5",
            "Type" : "Number"
          },
          "ELBHealthCheckUnhealthyThreshold" : {
            "Description" : "The number of consecutive health probe failures required before moving the instance to the Unhealthy state.",
            "Type" : "String",
            "Default" : "2"
          },
          "ELBHealthCheckInterval" : {
            "Description" : "The approximate interval, in seconds, between health checks of an individual instance.",
            "Type" : "Number",
            "Default" : "60"
          },
          "ELBHealthCheckTimeout" : {
            "Description" : "The amount of time, in seconds, during which no response means a failed health probe. This value must be less than the value for Interval.",
            "Default" : "30",
            "Type" : "Number"
          },
          
          "KeyName": {
              "Description": "Choose Key for the Instance",
              "Type":"AWS::EC2::KeyPair::KeyName"
              
          },
          "EC2SecurityGroups" : {
            "Description" : "Existing Security group for the EC2",
            "Type" : "AWS::EC2::SecurityGroup::Id",
            "Default" : "sg-0478c77019e93a0a9"
          }
             
    },
    "Mappings": {

    },
    "Conditions": {

    },
    "Resources": {        
        "Primary": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "KeyName":   { "Ref": "KeyName" },
                "ImageId": "ami-0a014c1c88db95bba",
                "InstanceType": "t2.micro",
                "SecurityGroupIds" : [{ "Ref": "EC2SecurityGroups" }],
                "SubnetId" :"subnet-00edd96af74d11609",                  
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Primary EC2 Instance"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -ex \n",
                                "yum install httpd -y \n",
                                "chkconfig httpd on \n",
                                "echo '<h1>This is Deployed by CloudFormation Primary Ec2</h1>' > /var/www/html/index.html  \n",
                                "service httpd start"
        
                            ]
                        ]
                    }
                }
        }
                },
                "Secondary": {
                    "Type": "AWS::EC2::Instance",
                    "Properties": {
                        "KeyName":   { "Ref": "KeyName" },
                        "ImageId": "ami-0a014c1c88db95bba",
                        "InstanceType": "t2.micro",
                        "SecurityGroupIds" : [{ "Ref": "EC2SecurityGroups" }],
                        "SubnetId" :"subnet-0e9c24a677ef3f6a4",
                        "Tags": [
                            {
                                "Key": "Name",
                                "Value": "Secondary EC2 Instance"
                            }
                        ],
                        "UserData": {
                            "Fn::Base64": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "#!/bin/bash -ex \n",
                                        "yum install httpd -y \n",
                                        "chkconfig httpd on \n",
                                        "echo '<h1>This is Deployed by CloudFormation Secondary Ec2</h1>' > /var/www/html/index.html  \n",
                                        "service httpd start"
                
                                    ]
                                ]
                            }
                        }
                }
                        },        
        "ElasticLoadBalancer" : {
        "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
        "Properties" : {
          "ConnectionDrainingPolicy" : {
            "Enabled" : "true",
            "Timeout" : "60"
          },
          "Instances" :[{ "Ref": "Primary" }, { "Ref": "Secondary" }],        
          "LoadBalancerName" : "DemoELB",
          "SecurityGroups" : [ { "Ref" : "ELBSecGroups" } ],
          "Subnets" : { "Ref" : "ELBSubnets" },
          "CrossZone" : "true",
          "Listeners" : [ {
            "InstancePort" : { "Ref" : "InstancePort" },
            "LoadBalancerPort" : { "Ref" : "LoadBalancerPort" },
            "Protocol" : { "Ref" : "Protocol" }
          } ],
          "HealthCheck" : {
            "Target" : { "Ref" : "ELBHealthCheckTarget" },
            "HealthyThreshold" : { "Ref" : "ELBHealthCheckHealthyThreshold" },
            "UnhealthyThreshold" : { "Ref" : "ELBHealthCheckUnhealthyThreshold" },
            "Interval" : { "Ref" : "ELBHealthCheckInterval" },
            "Timeout" : { "Ref" : "ELBHealthCheckTimeout" }
          }
          
          
        }
      }

    },
    "Outputs": {

    }
}
